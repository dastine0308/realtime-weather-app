{"ast":null,"code":"// STEP 1：匯入日出日落資料\nimport sunriseAndSunsetData from './sunrise-sunset.json';\nexport const getMoment = locationName => {\n  // STEP 2：從日出日落時間中找出符合的地區\n  const location = sunriseAndSunsetData.find(data => data.locationName === locationName); // STEP 3：找不到的話則拋出錯誤訊息\n\n  if (!location) {\n    throw new Error(`找不到 ${location} 的日出日落資料`);\n  } // STEP 4：取得當前時間\n\n\n  const now = new Date(); // STEP 5：將當前時間以 \"2019-10-08\" 的時間格式呈現\n\n  const nowDate = Intl.DateTimeFormat('zh-TW', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }).format(now).replace(/\\//g, '-'); // STEP 6：從該地區中找到對應的日期\n\n  const locationDate = location === null || location === void 0 ? void 0 : location.time.find(time => time.dataTime === nowDate); // STEP 7：找不到的話則拋出錯誤訊息\n\n  if (!locationDate) {\n    throw new Error(`找不到 ${locationName} 在 ${nowDate} 的日出日落資料`);\n  } // STEP 8：將日出日落以及當前時間轉成時間戳記（TimeStamp）\n\n\n  const sunriseTimestamp = new Date(`${locationDate.dataTime} ${locationDate.sunrise}`).getTime();\n  const sunsetTimestamp = new Date(`${locationDate.dataTime} ${locationDate.sunset}`).getTime();\n  const nowTimeStamp = now.getTime(); // STEP 9：若當前時間介於日出和日落中間，則表示為白天，否則為晚上\n\n  return sunriseTimestamp <= nowTimeStamp && nowTimeStamp <= sunsetTimestamp ? 'day' : 'night';\n};","map":{"version":3,"sources":["/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/utilis/helpers.js"],"names":["sunriseAndSunsetData","getMoment","locationName","location","find","data","Error","now","Date","nowDate","Intl","DateTimeFormat","year","month","day","format","replace","locationDate","time","dataTime","sunriseTimestamp","sunrise","getTime","sunsetTimestamp","sunset","nowTimeStamp"],"mappings":"AAAA;AACA,OAAOA,oBAAP,MAAiC,uBAAjC;AAEA,OAAO,MAAMC,SAAS,GAAIC,YAAD,IAAkB;AACzC;AACA,QAAMC,QAAQ,GAAGH,oBAAoB,CAACI,IAArB,CACdC,IAAD,IAAUA,IAAI,CAACH,YAAL,KAAsBA,YADjB,CAAjB,CAFyC,CAMzC;;AACA,MAAI,CAACC,QAAL,EAAe;AACb,UAAM,IAAIG,KAAJ,CAAW,OAAMH,QAAS,UAA1B,CAAN;AACD,GATwC,CAWzC;;;AACA,QAAMI,GAAG,GAAG,IAAIC,IAAJ,EAAZ,CAZyC,CAczC;;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,cAAL,CAAoB,OAApB,EAA6B;AAC3CC,IAAAA,IAAI,EAAE,SADqC;AAE3CC,IAAAA,KAAK,EAAE,SAFoC;AAG3CC,IAAAA,GAAG,EAAE;AAHsC,GAA7B,EAKbC,MALa,CAKNR,GALM,EAMbS,OANa,CAML,KANK,EAME,GANF,CAAhB,CAfyC,CAuBzC;;AACA,QAAMC,YAAY,GAAGd,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEe,IAAV,CAAed,IAAf,CAAqBc,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBV,OAAhD,CAArB,CAxByC,CA0BzC;;AACA,MAAI,CAACQ,YAAL,EAAmB;AACjB,UAAM,IAAIX,KAAJ,CAAW,OAAMJ,YAAa,MAAKO,OAAQ,UAA3C,CAAN;AACD,GA7BwC,CA+BzC;;;AACA,QAAMW,gBAAgB,GAAG,IAAIZ,IAAJ,CACtB,GAAES,YAAY,CAACE,QAAS,IAAGF,YAAY,CAACI,OAAQ,EAD1B,EAEvBC,OAFuB,EAAzB;AAGA,QAAMC,eAAe,GAAG,IAAIf,IAAJ,CACrB,GAAES,YAAY,CAACE,QAAS,IAAGF,YAAY,CAACO,MAAO,EAD1B,EAEtBF,OAFsB,EAAxB;AAGA,QAAMG,YAAY,GAAGlB,GAAG,CAACe,OAAJ,EAArB,CAtCyC,CAwCzC;;AACA,SAAOF,gBAAgB,IAAIK,YAApB,IAAoCA,YAAY,IAAIF,eAApD,GACH,KADG,GAEH,OAFJ;AAGD,CA5CM","sourcesContent":["// STEP 1：匯入日出日落資料\nimport sunriseAndSunsetData from './sunrise-sunset.json';\n\nexport const getMoment = (locationName) => {\n  // STEP 2：從日出日落時間中找出符合的地區\n  const location = sunriseAndSunsetData.find(\n    (data) => data.locationName === locationName\n  );\n\n  // STEP 3：找不到的話則拋出錯誤訊息\n  if (!location) {\n    throw new Error(`找不到 ${location} 的日出日落資料`);\n  }\n\n  // STEP 4：取得當前時間\n  const now = new Date();\n\n  // STEP 5：將當前時間以 \"2019-10-08\" 的時間格式呈現\n  const nowDate = Intl.DateTimeFormat('zh-TW', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  })\n    .format(now)\n    .replace(/\\//g, '-');\n\n  // STEP 6：從該地區中找到對應的日期\n  const locationDate = location?.time.find((time) => time.dataTime === nowDate);\n\n  // STEP 7：找不到的話則拋出錯誤訊息\n  if (!locationDate) {\n    throw new Error(`找不到 ${locationName} 在 ${nowDate} 的日出日落資料`);\n  }\n\n  // STEP 8：將日出日落以及當前時間轉成時間戳記（TimeStamp）\n  const sunriseTimestamp = new Date(\n    `${locationDate.dataTime} ${locationDate.sunrise}`\n  ).getTime();\n  const sunsetTimestamp = new Date(\n    `${locationDate.dataTime} ${locationDate.sunset}`\n  ).getTime();\n  const nowTimeStamp = now.getTime();\n\n  // STEP 9：若當前時間介於日出和日落中間，則表示為白天，否則為晚上\n  return sunriseTimestamp <= nowTimeStamp && nowTimeStamp <= sunsetTimestamp\n    ? 'day'\n    : 'night';\n};"]},"metadata":{},"sourceType":"module"}