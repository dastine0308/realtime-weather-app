{"ast":null,"code":"var _jsxFileName = \"/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from '@emotion/react';\nimport dayjs from 'dayjs';\nimport { ReactComponent as DayCloudyIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy.svg\";\nimport { ReactComponent as AirFlowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/refresh.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  light: {\n    backgroundColor: '#ededed',\n    foregroundColor: '#f9f9f9',\n    boxShadow: '0 1px 3px 0 #999999',\n    titleColor: '#212121',\n    temperatureColor: '#757575',\n    textColor: '#828282'\n  },\n  dark: {\n    backgroundColor: '#1F2022',\n    foregroundColor: '#121416',\n    boxShadow: '0 1px 4px 0 rgba(12, 12, 13, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.15)',\n    titleColor: '#f9f9fa',\n    temperatureColor: '#dddddd',\n    textColor: '#cccccc'\n  }\n};\nconst Container = styled.div`\n  background-color: ${({\n  theme\n}) => theme.backgroundColor};\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c = Container;\nconst WeatherCard = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({\n  theme\n}) => theme.boxShadow};\n  background-color: ${({\n  theme\n}) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\n_c2 = WeatherCard;\nconst Location = styled.div`\n  font-size: 28px;\n  color: ${({\n  theme\n}) => theme.titleColor};\n  margin-bottom: 20px;\n`;\n_c3 = Location;\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 30px;\n`;\n_c4 = Description;\nconst CurrentWeather = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n_c5 = CurrentWeather;\nconst Temperature = styled.div`\n  color: ${({\n  theme\n}) => theme.temperatureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n`;\n_c6 = Temperature;\nconst Celsius = styled.div`\n  font-weight: normal;\n  font-size: 42px;\n`;\n_c7 = Celsius;\nconst AirFlow = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 20px;\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n_c8 = AirFlow;\nconst Rain = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n_c9 = Rain;\nconst DayCloudy = styled(DayCloudyIcon)`\n  flex-basis: 30%;\n`;\n_c10 = DayCloudy;\nconst Refresh = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  svg {\n    margin-left: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n  }\n`;\n_c11 = Refresh;\nconst AUTHORIZATION_KEY = 'CWB-D2028D15-4ED5-43E4-A223-203E2D7913D1';\nconst LOCATION_NAME = '臺北';\n\nfunction App() {\n  _s();\n\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const [currentWeather, setCurrentWeather] = useState({\n    locationName: '台北市',\n    description: '多雲時晴',\n    temperature: 22.9,\n    windSpeed: 1.1,\n    rainPossibility: 48.3,\n    observationTime: '2020-12-12 22:10:00'\n  });\n\n  const handleClick = () => {\n    fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTHORIZATION_KEY}&locationName=${locationName}\n    `).then();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[currentTheme],\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(WeatherCard, {\n        children: [/*#__PURE__*/_jsxDEV(Location, {\n          children: currentWeather.locationName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Description, {\n          children: currentWeather.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          children: [/*#__PURE__*/_jsxDEV(Temperature, {\n            children: [Math.round(currentWeather.temperature), \" \", /*#__PURE__*/_jsxDEV(Celsius, {\n              children: \"\\xB0C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DayCloudy, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AirFlow, {\n          children: [/*#__PURE__*/_jsxDEV(AirFlowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), \" \", currentWeather.windSpeed, \" m/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rain, {\n          children: [/*#__PURE__*/_jsxDEV(RainIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), \" \", currentWeather.rainPossibility, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Refresh, {\n          onClick: handleClick,\n          children: [\"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593\\uFF1A\", new Intl.DateTimeFormat('zh-TW', {\n            hour: 'numeric',\n            minute: 'numeric'\n          }).format(dayjs(currentWeather.observationTime)), /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"T0Lgi/rr6Bb4x5OgoDc2IHSR8Es=\");\n\n_c12 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"WeatherCard\");\n$RefreshReg$(_c3, \"Location\");\n$RefreshReg$(_c4, \"Description\");\n$RefreshReg$(_c5, \"CurrentWeather\");\n$RefreshReg$(_c6, \"Temperature\");\n$RefreshReg$(_c7, \"Celsius\");\n$RefreshReg$(_c8, \"AirFlow\");\n$RefreshReg$(_c9, \"Rain\");\n$RefreshReg$(_c10, \"DayCloudy\");\n$RefreshReg$(_c11, \"Refresh\");\n$RefreshReg$(_c12, \"App\");","map":{"version":3,"sources":["/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/App.js"],"names":["React","useState","styled","ThemeProvider","dayjs","theme","light","backgroundColor","foregroundColor","boxShadow","titleColor","temperatureColor","textColor","dark","Container","div","WeatherCard","Location","Description","CurrentWeather","Temperature","Celsius","AirFlow","Rain","DayCloudy","DayCloudyIcon","Refresh","AUTHORIZATION_KEY","LOCATION_NAME","App","currentTheme","setCurrentTheme","currentWeather","setCurrentWeather","locationName","description","temperature","windSpeed","rainPossibility","observationTime","handleClick","fetch","then","Math","round","Intl","DateTimeFormat","hour","minute","format"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from '@emotion/react';\nimport dayjs from 'dayjs';\n\nimport { ReactComponent as DayCloudyIcon } from './images/day-cloudy.svg';\nimport { ReactComponent as AirFlowIcon } from './images/airFlow.svg';\nimport { ReactComponent as RainIcon } from './images/rain.svg';\nimport { ReactComponent as RefreshIcon } from './images/refresh.svg';\n\nconst theme = {\n  light: {\n    backgroundColor: '#ededed',\n    foregroundColor: '#f9f9f9',\n    boxShadow: '0 1px 3px 0 #999999',\n    titleColor: '#212121',\n    temperatureColor: '#757575',\n    textColor: '#828282',\n  },\n  dark: {\n    backgroundColor: '#1F2022',\n    foregroundColor: '#121416',\n    boxShadow:\n      '0 1px 4px 0 rgba(12, 12, 13, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.15)',\n    titleColor: '#f9f9fa',\n    temperatureColor: '#dddddd',\n    textColor: '#cccccc',\n  },\n};\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.backgroundColor};\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst WeatherCard = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  background-color: ${({ theme }) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\n\nconst Location = styled.div`\n  font-size: 28px;\n  color: ${({ theme }) => theme.titleColor};\n  margin-bottom: 20px;\n`;\n\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 30px;\n`;\n\nconst CurrentWeather = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst Temperature = styled.div`\n  color: ${({ theme }) => theme.temperatureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n`;\n\nconst Celsius = styled.div`\n  font-weight: normal;\n  font-size: 42px;\n`;\n\nconst AirFlow = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 20px;\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Rain = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst DayCloudy = styled(DayCloudyIcon)`\n  flex-basis: 30%;\n`;\n\nconst Refresh = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({ theme }) => theme.textColor};\n\n  svg {\n    margin-left: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n  }\n`;\n\n\nconst AUTHORIZATION_KEY = 'CWB-D2028D15-4ED5-43E4-A223-203E2D7913D1';\nconst LOCATION_NAME = '臺北';\n\nfunction App() {\n  const [currentTheme, setCurrentTheme] = useState('light');\n\n  const [currentWeather, setCurrentWeather] = useState({\n    locationName: '台北市',\n    description: '多雲時晴',\n    temperature: 22.9,\n    windSpeed: 1.1,\n    rainPossibility: 48.3,\n    observationTime: '2020-12-12 22:10:00',\n  })\n\n  const handleClick = () => {\n    fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTHORIZATION_KEY}&locationName=${locationName}\n    `).then()\n  }\n\n  return (\n    <ThemeProvider theme={theme[currentTheme]}>\n      <Container>\n        <WeatherCard>\n          <Location>{currentWeather.locationName}</Location>\n          <Description>{currentWeather.description}</Description>\n          <CurrentWeather>\n            <Temperature>\n              {Math.round(currentWeather.temperature)} <Celsius>°C</Celsius>\n            </Temperature>\n            <DayCloudy />\n          </CurrentWeather>\n          <AirFlow>\n            <AirFlowIcon /> {currentWeather.windSpeed} m/h\n          </AirFlow>\n          <Rain>\n            <RainIcon /> {currentWeather.rainPossibility}%\n          </Rain>\n          <Refresh onClick={handleClick}>\n            最後觀測時間：\n            {new Intl.DateTimeFormat('zh-TW', {\n              hour: 'numeric',\n              minute: 'numeric',\n            }).format(dayjs(currentWeather.observationTime))} \n            <RefreshIcon />\n          </Refresh>\n        </WeatherCard>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}