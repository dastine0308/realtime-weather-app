{"ast":null,"code":"var _jsxFileName = \"/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/views/WeatherSetting.js\",\n    _s = $RefreshSig$();\n\n// ./src/views/WeatherSetting.js\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { availableLocations } from './../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherSettingWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({\n  theme\n}) => theme.boxShadow};\n  background-color: ${({\n  theme\n}) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 20px;\n`;\n_c = WeatherSettingWrapper;\nconst Title = styled.div`\n  font-size: 28px;\n  color: ${({\n  theme\n}) => theme.titleColor};\n  margin-bottom: 30px;\n`;\n_c2 = Title;\nconst StyledLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 15px;\n`;\n_c3 = StyledLabel;\nconst StyledSelect = styled.select`\n  display: block;\n  box-sizing: border-box;\n  background: transparent;\n  border: 1px solid ${({\n  theme\n}) => theme.textColor};\n  outline: none;\n  width: 100%;\n  max-width: 100%;\n  color: ${({\n  theme\n}) => theme.textColor};\n  font-size: 16px;\n  padding: 7px 10px;\n  margin-bottom: 40px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  box-shadow: none;\n  outline: 0;\n`;\n_c4 = StyledSelect;\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    white-space: nowrap;\n    user-select: none;\n    margin: 0;\n    letter-spacing: 0.3px;\n    line-height: 1;\n    cursor: pointer;\n    overflow: visible;\n    text-transform: none;\n    border: 1px solid transparent;\n    background-color: transparent;\n    height: 35px;\n    width: 80px;\n    border-radius: 5px;\n    font-size: 14px;\n\n    &:focus,\n    &.focus {\n      outline: 0;\n      box-shadow: none;\n    }\n\n    &::-moz-focus-inner {\n      padding: 0;\n      border-style: none;\n    }\n  }\n`;\n_c5 = ButtonGroup;\nconst Back = styled.button`\n  && {\n    color: ${({\n  theme\n}) => theme.textColor};\n    border-color: ${({\n  theme\n}) => theme.textColor};\n  }\n`;\n_c6 = Back;\nconst Save = styled.button`\n  && {\n    color: white;\n    background-color: #40a9f3;\n  }\n`;\n_c7 = Save;\n\nconst WeatherSetting = ({\n  cityName,\n  handleCurrentPageChange,\n  handleCurrentCityChange\n}) => {\n  _s();\n\n  const [locationName, setLocationName] = useState(cityName);\n\n  const handleChange = e => {\n    setLocationName(e.target.value);\n  };\n\n  const handleSave = () => {\n    handleCurrentCityChange(locationName);\n    handleCurrentPageChange('WeatherCard');\n    localStorage.setItem('cityName', cityName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(WeatherSettingWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: \"location\",\n      children: \"\\u5730\\u5340\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n      id: \"location\",\n      name: \"location\",\n      onChange: handleChange,\n      value: locationName,\n      children: availableLocations.map(({\n        cityName\n      }) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cityName,\n        children: cityName\n      }, cityName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Back, {\n        onClick: () => handleCurrentPageChange('WeatherCard'),\n        children: \"\\u8FD4\\u56DE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Save, {\n        onClick: handleSave,\n        children: \"\\u5132\\u5B58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherSetting, \"U8OHd326IqF9xZl86/QHNu8I+OI=\");\n\n_c8 = WeatherSetting;\nexport default WeatherSetting;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"WeatherSettingWrapper\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"StyledLabel\");\n$RefreshReg$(_c4, \"StyledSelect\");\n$RefreshReg$(_c5, \"ButtonGroup\");\n$RefreshReg$(_c6, \"Back\");\n$RefreshReg$(_c7, \"Save\");\n$RefreshReg$(_c8, \"WeatherSetting\");","map":{"version":3,"sources":["/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/views/WeatherSetting.js"],"names":["React","useState","styled","availableLocations","WeatherSettingWrapper","div","theme","boxShadow","foregroundColor","Title","titleColor","StyledLabel","label","textColor","StyledSelect","select","ButtonGroup","Back","button","Save","WeatherSetting","cityName","handleCurrentPageChange","handleCurrentCityChange","locationName","setLocationName","handleChange","e","target","value","handleSave","localStorage","setItem","map"],"mappings":"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","sourcesContent":["// ./src/views/WeatherSetting.js\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { availableLocations } from './../utils/helpers';\n\nconst WeatherSettingWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  background-color: ${({ theme }) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  font-size: 28px;\n  color: ${({ theme }) => theme.titleColor};\n  margin-bottom: 30px;\n`;\n\nconst StyledLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 15px;\n`;\n\nconst StyledSelect = styled.select`\n  display: block;\n  box-sizing: border-box;\n  background: transparent;\n  border: 1px solid ${({ theme }) => theme.textColor};\n  outline: none;\n  width: 100%;\n  max-width: 100%;\n  color: ${({ theme }) => theme.textColor};\n  font-size: 16px;\n  padding: 7px 10px;\n  margin-bottom: 40px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  box-shadow: none;\n  outline: 0;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    white-space: nowrap;\n    user-select: none;\n    margin: 0;\n    letter-spacing: 0.3px;\n    line-height: 1;\n    cursor: pointer;\n    overflow: visible;\n    text-transform: none;\n    border: 1px solid transparent;\n    background-color: transparent;\n    height: 35px;\n    width: 80px;\n    border-radius: 5px;\n    font-size: 14px;\n\n    &:focus,\n    &.focus {\n      outline: 0;\n      box-shadow: none;\n    }\n\n    &::-moz-focus-inner {\n      padding: 0;\n      border-style: none;\n    }\n  }\n`;\n\nconst Back = styled.button`\n  && {\n    color: ${({ theme }) => theme.textColor};\n    border-color: ${({ theme }) => theme.textColor};\n  }\n`;\n\nconst Save = styled.button`\n  && {\n    color: white;\n    background-color: #40a9f3;\n  }\n`;\n\nconst WeatherSetting = ({ \n    cityName, \n    handleCurrentPageChange, \n    handleCurrentCityChange \n}) => {\n  const [locationName, setLocationName] = useState(cityName);\n\n  const handleChange = (e) => {\n    setLocationName(e.target.value);\n  }\n\n  const handleSave = () => {\n    handleCurrentCityChange(locationName);\n    handleCurrentPageChange('WeatherCard');\n    localStorage.setItem('cityName', cityName);\n  }\n\n  return (\n    <WeatherSettingWrapper>\n      <Title>設定</Title>\n      <StyledLabel htmlFor=\"location\">地區</StyledLabel>\n      <StyledSelect \n        id=\"location\" \n        name=\"location\"\n        onChange={ handleChange }\n        value={ locationName }\n      >\n        {availableLocations.map(({cityName}) => (\n          <option value={cityName} key={cityName}>\n            {cityName}\n          </option>\n        ))}\n      </StyledSelect>\n\n      <ButtonGroup>\n        <Back onClick={() => handleCurrentPageChange('WeatherCard')}>返回</Back>\n        <Save onClick={ handleSave }>儲存</Save>\n      </ButtonGroup>\n    </WeatherSettingWrapper>\n  );\n};\n\nexport default WeatherSetting;"]},"metadata":{},"sourceType":"module"}