{"ast":null,"code":"var _jsxFileName = \"/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/views/WeatherCard.js\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport styled from '@emotion/styled';\nimport dayjs from 'dayjs';\nimport { ReactComponent as DayCloudyIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./../images/day-cloudy.svg\";\nimport { ReactComponent as AirFlowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./../images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./../images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./../images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./../images/loading.svg\";\nimport WeatherIcon from './../components/WeatherIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherCard = () => {\n  return /*#__PURE__*/_jsxDEV(WeatherCardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Location, {\n      children: locationName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      children: [description, \" \", comfortability]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      children: [/*#__PURE__*/_jsxDEV(Temperature, {\n        children: [Math.round(temperature), \" \", /*#__PURE__*/_jsxDEV(Celsius, {\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n        weatherCode: weatherCode,\n        moment: moment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AirFlow, {\n      children: [/*#__PURE__*/_jsxDEV(AirFlowIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), \" \", windSpeed, \" m/h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Rain, {\n      children: [/*#__PURE__*/_jsxDEV(RainIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), \" \", rainPossibility, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Refresh, {\n      onClick: fetchData,\n      isLoading: isLoading,\n      children: [\"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593\\uFF1A\", new Intl.DateTimeFormat('zh-TW', {\n        hour: 'numeric',\n        minute: 'numeric'\n      }).format(dayjs(observationTime)), isLoading ? /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WeatherCard;\nexport default WeatherCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"sources":["/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/views/WeatherCard.js"],"names":["React","useState","useEffect","useMemo","styled","dayjs","WeatherIcon","WeatherCard","locationName","description","comfortability","Math","round","temperature","weatherCode","moment","windSpeed","rainPossibility","fetchData","isLoading","Intl","DateTimeFormat","hour","minute","format","observationTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAOA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AACtB,sBACI,QAAC,kBAAD;AAAA,4BACI,QAAC,QAAD;AAAA,gBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAA,iBAAcC,WAAd,OAA4BC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,cAAD;AAAA,8BACA,QAAC,WAAD;AAAA,mBACKC,IAAI,CAACC,KAAL,CAAWC,WAAX,CADL,oBAC8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA,QAAC,WAAD;AAAa,QAAA,WAAW,EAAEC,WAA1B;AAAuC,QAAA,MAAM,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI,QAAC,OAAD;AAAA,8BACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADA,OACiBC,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI,QAAC,IAAD;AAAA,8BACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADA,OACcC,eADd;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAeI,QAAC,OAAD;AACA,MAAA,OAAO,EAAEC,SADT;AAEA,MAAA,SAAS,EAAEC,SAFX;AAAA,+DAKC,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC9BC,QAAAA,IAAI,EAAE,SADwB;AAE9BC,QAAAA,MAAM,EAAE;AAFsB,OAAjC,EAGEC,MAHF,CAGSnB,KAAK,CAACoB,eAAD,CAHd,CALD,EASCN,SAAS,gBAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAoB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAT9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA9BD;;KAAMZ,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useMemo} from \"react\";\nimport styled from '@emotion/styled';\nimport dayjs from 'dayjs';\n\nimport { ReactComponent as DayCloudyIcon } from './../images/day-cloudy.svg';\nimport { ReactComponent as AirFlowIcon } from './../images/airFlow.svg';\nimport { ReactComponent as RainIcon } from './../images/rain.svg';\nimport { ReactComponent as RefreshIcon } from './../images/refresh.svg';\nimport { ReactComponent as LoadingIcon } from './../images/loading.svg';\nimport WeatherIcon from './../components/WeatherIcon';\n\n\nconst WeatherCard = () => {\n    return (\n        <WeatherCardWrapper>\n            <Location>{locationName}</Location>\n            <Description>{description} {comfortability}</Description>\n            <CurrentWeather>\n            <Temperature>\n                {Math.round(temperature)} <Celsius>°C</Celsius>\n            </Temperature>\n            <WeatherIcon weatherCode={weatherCode} moment={moment}/>\n            </CurrentWeather>\n            <AirFlow>\n            <AirFlowIcon /> {windSpeed} m/h\n            </AirFlow>\n            <Rain>\n            <RainIcon /> {rainPossibility}%\n            </Rain>\n            <Refresh \n            onClick={fetchData} \n            isLoading={isLoading}\n            >\n            最後觀測時間：\n            {new Intl.DateTimeFormat('zh-TW', {\n                hour: 'numeric',\n                minute: 'numeric',\n            }).format(dayjs(observationTime))} \n            {isLoading ? <LoadingIcon/> : <RefreshIcon />}\n            </Refresh>\n        </WeatherCardWrapper>\n    )\n};\n\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}