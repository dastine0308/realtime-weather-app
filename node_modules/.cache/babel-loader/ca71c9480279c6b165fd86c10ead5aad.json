{"ast":null,"code":"var _jsxFileName = \"/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from '@emotion/react';\nimport { getMoment, findLocation } from './utilis/helpers';\nimport WeatherCard from './views/WeatherCard';\nimport WeatherSetting from './views/WeatherSetting';\nimport useWeatherAPI from './hooks/useWeatherAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  light: {\n    backgroundColor: '#ededed',\n    foregroundColor: '#f9f9f9',\n    boxShadow: '0 1px 3px 0 #999999',\n    titleColor: '#212121',\n    temperatureColor: '#757575',\n    textColor: '#828282'\n  },\n  dark: {\n    backgroundColor: '#1F2022',\n    foregroundColor: '#121416',\n    boxShadow: '0 1px 4px 0 rgba(12, 12, 13, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.15)',\n    titleColor: '#f9f9fa',\n    temperatureColor: '#dddddd',\n    textColor: '#cccccc'\n  }\n};\nconst Container = styled.div`\n  background-color: ${({\n  theme\n}) => theme.backgroundColor};\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c = Container;\nconst AUTHORIZATION_KEY = 'CWB-D2028D15-4ED5-43E4-A223-203E2D7913D1';\nconst LOCATION_NAME = '臺北';\nconst LOCATION_NAME_FORECAST = '臺北市';\n\nfunction App() {\n  _s();\n\n  console.log('-----invoke function component-----');\n  const [weatherElement, fetchData] = useWeatherAPI({\n    locationName: LOCATION_NAME,\n    cityName: LOCATION_NAME_FORECAST,\n    authorizationKey: AUTHORIZATION_KEY\n  });\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const moment = useMemo(() => getMoment(LOCATION_NAME_FORECAST), []);\n  useEffect(() => {\n    setCurrentTheme(moment === 'day' ? 'light' : 'dark');\n  }, [moment]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[currentTheme],\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [console.log('render'), /*#__PURE__*/_jsxDEV(WeatherCard, {\n        weatherElement: weatherElement,\n        moment: moment,\n        fetchData: fetchData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2Wl0G+vmQs8xqCOhKtw1On27mgI=\", false, function () {\n  return [useWeatherAPI];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/michelle/Desktop/Dastine/web/realtime-weather-app/src/App.js"],"names":["React","useState","useEffect","useMemo","styled","ThemeProvider","getMoment","findLocation","WeatherCard","WeatherSetting","useWeatherAPI","theme","light","backgroundColor","foregroundColor","boxShadow","titleColor","temperatureColor","textColor","dark","Container","div","AUTHORIZATION_KEY","LOCATION_NAME","LOCATION_NAME_FORECAST","App","console","log","weatherElement","fetchData","locationName","cityName","authorizationKey","currentTheme","setCurrentTheme","moment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAGA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE,SADZ;AAELC,IAAAA,eAAe,EAAE,SAFZ;AAGLC,IAAAA,SAAS,EAAE,qBAHN;AAILC,IAAAA,UAAU,EAAE,SAJP;AAKLC,IAAAA,gBAAgB,EAAE,SALb;AAMLC,IAAAA,SAAS,EAAE;AANN,GADK;AASZC,EAAAA,IAAI,EAAE;AACJN,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,eAAe,EAAE,SAFb;AAGJC,IAAAA,SAAS,EACP,kEAJE;AAKJC,IAAAA,UAAU,EAAE,SALR;AAMJC,IAAAA,gBAAgB,EAAE,SANd;AAOJC,IAAAA,SAAS,EAAE;AAPP;AATM,CAAd;AAoBA,MAAME,SAAS,GAAGhB,MAAM,CAACiB,GAAI;AAC7B,sBAAsB,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,eAAgB;AAC3D;AACA;AACA;AACA;AACA,CANA;KAAMO,S;AAQN,MAAME,iBAAiB,GAAG,0CAA1B;AACA,MAAMC,aAAa,GAAG,IAAtB;AACA,MAAMC,sBAAsB,GAAG,KAA/B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AAEA,QAAM,CAACC,cAAD,EAAiBC,SAAjB,IAA8BnB,aAAa,CAAC;AAChDoB,IAAAA,YAAY,EAAEP,aADkC;AAEhDQ,IAAAA,QAAQ,EAAEP,sBAFsC;AAGhDQ,IAAAA,gBAAgB,EAAEV;AAH8B,GAAD,CAAjD;AAMA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAAC,OAAD,CAAhD;AACA,QAAMkC,MAAM,GAAGhC,OAAO,CAAC,MAAMG,SAAS,CAACkB,sBAAD,CAAhB,EAA0C,EAA1C,CAAtB;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,eAAe,CAAEC,MAAM,KAAK,KAAX,GAAmB,OAAnB,GAA6B,MAA/B,CAAf;AACD,GAFQ,EAEP,CAACA,MAAD,CAFO,CAAT;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAExB,KAAK,CAACsB,YAAD,CAA3B;AAAA,2BACE,QAAC,SAAD;AAAA,iBACGP,OAAO,CAACC,GAAR,CAAY,QAAZ,CADH,eAEE,QAAC,WAAD;AACE,QAAA,cAAc,EAAEC,cADlB;AAEE,QAAA,MAAM,EAAEO,MAFV;AAGE,QAAA,SAAS,EAAEN;AAHb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7BQJ,G;UAG6Bf,a;;;MAH7Be,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from '@emotion/react';\n\nimport { getMoment, findLocation } from './utilis/helpers';\nimport WeatherCard from './views/WeatherCard';\nimport WeatherSetting from './views/WeatherSetting';\nimport useWeatherAPI from './hooks/useWeatherAPI';\n\n\nconst theme = {\n  light: {\n    backgroundColor: '#ededed',\n    foregroundColor: '#f9f9f9',\n    boxShadow: '0 1px 3px 0 #999999',\n    titleColor: '#212121',\n    temperatureColor: '#757575',\n    textColor: '#828282',\n  },\n  dark: {\n    backgroundColor: '#1F2022',\n    foregroundColor: '#121416',\n    boxShadow:\n      '0 1px 4px 0 rgba(12, 12, 13, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.15)',\n    titleColor: '#f9f9fa',\n    temperatureColor: '#dddddd',\n    textColor: '#cccccc',\n  },\n};\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.backgroundColor};\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AUTHORIZATION_KEY = 'CWB-D2028D15-4ED5-43E4-A223-203E2D7913D1';\nconst LOCATION_NAME = '臺北';\nconst LOCATION_NAME_FORECAST = '臺北市';\n\nfunction App() {\n  console.log('-----invoke function component-----');\n\n  const [weatherElement, fetchData] = useWeatherAPI({\n    locationName: LOCATION_NAME,\n    cityName: LOCATION_NAME_FORECAST,\n    authorizationKey: AUTHORIZATION_KEY,\n  });\n\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const moment = useMemo(() => getMoment(LOCATION_NAME_FORECAST), []);\n\n  useEffect(() => {\n    setCurrentTheme( moment === 'day' ? 'light' : 'dark');\n  },[moment])\n\n  return (\n    <ThemeProvider theme={theme[currentTheme]}>\n      <Container>\n        {console.log('render')}\n        <WeatherCard \n          weatherElement={weatherElement}\n          moment={moment}\n          fetchData={fetchData}\n        />\n        \n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}